/* Fonts generator */
@mixin font-face($font-name,
	$font-path,
	$font-weight: 400,
	$font-style: normal) {
	@font-face {
		font-display: swap;
		font-family: $font-name;
		font-style: $font-style;
		font-weight: $font-weight;
		src: url('#{$font-path}.woff2') format('woff2'),
		url('#{$font-path}.woff') format('woff');
	}
}

// @media
@mixin mq($width, $widthMax: false) {
	@if map_has_key($breakpoints, $width) {
		$width: map_get($breakpoints, $width);

		@if ($widthMax !=false) {
			$widthMax: map_get($breakpoints, $widthMax);

			@media only screen and (max-width: $width) and (min-width: $widthMax + 1) {
				@content;
			}
		}

		@else {
			@media only screen and (max-width: $width) {
				@content;
			}
		}
	}
}

@mixin mq-min($width) {
	@if map_has_key($breakpoints, $width) {
		$width: map_get($breakpoints, $width);

		@media only screen and (min-width: $width + 1) {
			@content;
		}
	}
}

// Not touchable devices
@mixin mqNotTouchable() {
	@media (hover: hover) {
		@content;
	}
}

/* Clearfix */
@mixin clearfix {

	&:before,
	&:after {
		content: '';
		display: table;
	}

	&:after {
		clear: both;
	}
}


@mixin transformPos($axis: 'both') {
	position: absolute;

	@if $axis=='y' {
		top: 50%;
		-webkit-transform: translateY(-50%);
		transform: translateY(-50%);
	}

	@if $axis=='x' {
		left: 50%;
		-webkit-transform: translateX(-50%);
		transform: translateX(-50%);
	}

	@if $axis=='both' {
		top: 50%;
		left: 50%;
		-webkit-transform: translate(-50%, -50%);
		transform: translate(-50%, -50%);
	}
}


/* default transition */
@mixin transition($property: all) {
	transition: $property 0.2s ease;
}

/* Available hide pattern: visually-hidden */
%visualhidden {
	border: 0;
	clip: rect(0 0 0 0);
	clip-path: inset(100%);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
}

%p {
	font-size: 18px;
	line-height: 1.78;

	@include mq('tablet') {
		font-size: 16px;
		line-height: 24px;
	}
}

